-- MySQL Script generated by MySQL Workbench
-- 12/10/14 23:36:33
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema itinerary
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `itinerary` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `itinerary` ;

-- -----------------------------------------------------
-- Table `itinerary`.`person_master`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `itinerary`.`person_master` ;

CREATE TABLE IF NOT EXISTS `itinerary`.`person_master` (
  `person_id` CHAR(10) NOT NULL,
  `person_first_name` VARCHAR(45) NULL,
  `person_last_name` VARCHAR(45) NULL,
  PRIMARY KEY (`person_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itinerary`.`itinerary_master`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `itinerary`.`itinerary_master` ;

CREATE TABLE IF NOT EXISTS `itinerary`.`itinerary_master` (
  `itinerary_id` CHAR(10) NOT NULL,
  `start_date` DATE NULL,
  `end_date` DATE NULL,
  `itinerary_type` VARCHAR(20) NULL,
  PRIMARY KEY (`itinerary_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itinerary`.`itinerary_detail`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `itinerary`.`itinerary_detail` ;

CREATE TABLE IF NOT EXISTS `itinerary`.`itinerary_detail` (
  `itinerary_id` CHAR(10) NOT NULL,
  `itinerary_detail_id` CHAR(10) NOT NULL,
  `itinerary_detail_date` DATE NOT NULL,
  `source_place_id` CHAR(10) NULL,
  `dest_place_id` CHAR(10) NULL,
  PRIMARY KEY (`itinerary_detail_id`),
  INDEX `FK_itinerary_master_link_idx` (`itinerary_id` ASC),
  CONSTRAINT `FK_itinerary_master_link`
    FOREIGN KEY (`itinerary_id`)
    REFERENCES `itinerary`.`itinerary_master` (`itinerary_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itinerary`.`itinerary_person_link`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `itinerary`.`itinerary_person_link` ;

CREATE TABLE IF NOT EXISTS `itinerary`.`itinerary_person_link` (
  `person_id` CHAR(10) NOT NULL,
  `itinerary_id` CHAR(10) NOT NULL,
  `role_id` CHAR(10) NOT NULL,
  PRIMARY KEY (`person_id`, `itinerary_id`),
  INDEX `FK_itinerary_mast_itinerary_per_link_it_id_idx` (`itinerary_id` ASC),
  CONSTRAINT `FK_itinerary_person_person_mast`
    FOREIGN KEY (`person_id`)
    REFERENCES `itinerary`.`person_master` (`person_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_itinerary_mast_itinerary_per_link`
    FOREIGN KEY (`itinerary_id`)
    REFERENCES `itinerary`.`itinerary_master` (`itinerary_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itinerary`.`itinerary_hotel_link`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `itinerary`.`itinerary_hotel_link` ;

CREATE TABLE IF NOT EXISTS `itinerary`.`itinerary_hotel_link` (
  `itinerary_hotel_detail_id` CHAR(10) NOT NULL,
  `itinerary_detail_id` CHAR(10) NOT NULL,
  `hotel_id` CHAR(10) NOT NULL,
  `check_in_date` DATETIME NULL,
  `check_out_date` DATETIME NULL,
  INDEX `FK_itinerary_hotel_link_idx` (`itinerary_detail_id` ASC),
  PRIMARY KEY (`itinerary_hotel_detail_id`),
  CONSTRAINT `FK_itinerary_hotel_link`
    FOREIGN KEY (`itinerary_detail_id`)
    REFERENCES `itinerary`.`itinerary_detail` (`itinerary_detail_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itinerary`.`itinerary_sightseeing_link`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `itinerary`.`itinerary_sightseeing_link` ;

CREATE TABLE IF NOT EXISTS `itinerary`.`itinerary_sightseeing_link` (
  `itinerary_detail_id` CHAR(10) NOT NULL,
  `place_id` CHAR(10) NOT NULL,
  `comments` VARCHAR(500) NULL,
  PRIMARY KEY (`place_id`, `itinerary_detail_id`),
  INDEX `FK_itinerary_sightseeing_link_id_idx` (`itinerary_detail_id` ASC),
  CONSTRAINT `FK_itinerary_sightseeing_link`
    FOREIGN KEY (`itinerary_detail_id`)
    REFERENCES `itinerary`.`itinerary_detail` (`itinerary_detail_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itinerary`.`itinerary_travel_link`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `itinerary`.`itinerary_travel_link` ;

CREATE TABLE IF NOT EXISTS `itinerary`.`itinerary_travel_link` (
  `itinerary_detail_id` CHAR(10) NOT NULL,
  `transport_id` CHAR(10) NOT NULL,
  `comments` VARCHAR(500) NULL,
  `source_place_id` CHAR(10) NULL,
  `dest_place_id` CHAR(10) NULL,
  `cost` DECIMAL NULL,
  PRIMARY KEY (`itinerary_detail_id`, `transport_id`),
  CONSTRAINT `FK_itinerary_travel_link`
    FOREIGN KEY (`itinerary_detail_id`)
    REFERENCES `itinerary`.`itinerary_detail` (`itinerary_detail_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itinerary`.`itinerary_hotel_detail`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `itinerary`.`itinerary_hotel_detail` ;

CREATE TABLE IF NOT EXISTS `itinerary`.`itinerary_hotel_detail` (
  `itinerary_hotel_detail_id` CHAR(10) NOT NULL,
  `room_type` VARCHAR(45) NULL,
  `adult_nos` INT NULL,
  `child_nos` INT NULL,
  `total_cost` DECIMAL NULL,
  PRIMARY KEY (`itinerary_hotel_detail_id`),
  CONSTRAINT `FK_hotel_link_idx`
    FOREIGN KEY (`itinerary_hotel_detail_id`)
    REFERENCES `itinerary`.`itinerary_hotel_link` (`itinerary_hotel_detail_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
